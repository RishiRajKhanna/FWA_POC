{"timestamp": "2025-10-20 12:38:56,413", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:39:03,776", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:39:11,377", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:39:25,064", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:46:06,321", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:46:22,317", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:46:29,345", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:46:36,560", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:46:43,355", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:46:53,225", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:47:02,681", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:47:14,686", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:47:24,511", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:47:32,767", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:47:41,169", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:47:57,740", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:48:09,936", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 12:48:21,002", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 13:00:53,925", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 13:00:58,392", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 13:03:26,367", "level": "INFO", "message": "File saved to C:\\Users\\703419608\\Downloads\\FWA-Back-Front-main\\FWA-Back-Front-main\\Backend\\temp_upload.csv"}
{"timestamp": "2025-10-20 13:03:26,846", "level": "INFO", "message": "Running Scenario 1: Benefit Outlier Detection"}
{"timestamp": "2025-10-20 13:03:27,146", "level": "INFO", "message": "Scenario 1 finished.", "event_type": "rule_detection", "scenario_id": 1, "scenario_name": "Benefit Outlier Detection", "anomalies_found": 762}
{"timestamp": "2025-10-20 13:03:27,146", "level": "INFO", "message": "Running Scenario 2: Chemotherapy Gap Detection"}
{"timestamp": "2025-10-20 13:03:27,437", "level": "INFO", "message": "Scenario 2 finished.", "event_type": "rule_detection", "scenario_id": 2, "scenario_name": "Chemotherapy Gap Detection", "anomalies_found": 12}
{"timestamp": "2025-10-20 13:03:27,444", "level": "INFO", "message": "Running Scenario 3: Cross-Country Fraud Detection"}
{"timestamp": "2025-10-20 13:03:27,769", "level": "INFO", "message": "Scenario 3 finished.", "event_type": "rule_detection", "scenario_id": 3, "scenario_name": "Cross-Country Fraud Detection", "anomalies_found": 571}
{"timestamp": "2025-10-20 13:03:27,769", "level": "INFO", "message": "Running Scenario 4: Sunday Claims Analysis"}
{"timestamp": "2025-10-20 13:03:31,685", "level": "INFO", "message": "Scenario 4 finished.", "event_type": "rule_detection", "scenario_id": 4, "scenario_name": "Sunday Claims Analysis", "anomalies_found": 6103}
{"timestamp": "2025-10-20 13:03:31,685", "level": "INFO", "message": "Running Scenario 5: Multiple Claims Same Invoice"}
{"timestamp": "2025-10-20 13:03:31,881", "level": "INFO", "message": "Scenario 5 finished.", "event_type": "rule_detection", "scenario_id": 5, "scenario_name": "Multiple Claims Same Invoice", "anomalies_found": 4}
{"timestamp": "2025-10-20 13:03:31,881", "level": "INFO", "message": "Running Scenario 6: Inpatient/Outpatient Same Date"}
{"timestamp": "2025-10-20 13:03:32,681", "level": "INFO", "message": "Scenario 6 finished.", "event_type": "rule_detection", "scenario_id": 6, "scenario_name": "Inpatient/Outpatient Same Date", "anomalies_found": 256}
{"timestamp": "2025-10-20 13:03:32,685", "level": "INFO", "message": "Running Scenario 7: Provider Multi-Country"}
{"timestamp": "2025-10-20 13:03:32,920", "level": "INFO", "message": "Scenario 7 finished.", "event_type": "rule_detection", "scenario_id": 7, "scenario_name": "Provider Multi-Country", "anomalies_found": 74}
{"timestamp": "2025-10-20 13:03:32,933", "level": "INFO", "message": "Running Scenario 8: Multiple Provider Same Date"}
{"timestamp": "2025-10-20 13:03:48,030", "level": "INFO", "message": "Scenario 8 finished.", "event_type": "rule_detection", "scenario_id": 8, "scenario_name": "Multiple Provider Same Date", "anomalies_found": 316}
{"timestamp": "2025-10-20 13:03:48,040", "level": "INFO", "message": "Running Scenario 9: Member Multi-Currency"}
{"timestamp": "2025-10-20 13:03:48,647", "level": "INFO", "message": "Scenario 9 finished.", "event_type": "rule_detection", "scenario_id": 9, "scenario_name": "Member Multi-Currency", "anomalies_found": 3810}
{"timestamp": "2025-10-20 13:03:48,647", "level": "INFO", "message": "Running Scenario 10: Gender-Procedure Mismatch"}
{"timestamp": "2025-10-20 13:03:48,814", "level": "INFO", "message": "Scenario 10 finished.", "event_type": "rule_detection", "scenario_id": 10, "scenario_name": "Gender-Procedure Mismatch", "anomalies_found": 3432}
{"timestamp": "2025-10-20 13:03:48,814", "level": "INFO", "message": "Running Scenario 11: Early Invoice Date"}
{"timestamp": "2025-10-20 13:03:49,030", "level": "INFO", "message": "Scenario 11 finished.", "event_type": "rule_detection", "scenario_id": 11, "scenario_name": "Early Invoice Date", "anomalies_found": 4}
{"timestamp": "2025-10-20 13:03:49,031", "level": "INFO", "message": "Running Scenario 12: Adult Pediatric Diagnosis"}
{"timestamp": "2025-10-20 13:03:49,197", "level": "INFO", "message": "Scenario 12 finished.", "event_type": "rule_detection", "scenario_id": 12, "scenario_name": "Adult Pediatric Diagnosis", "anomalies_found": 129}
{"timestamp": "2025-10-20 13:03:49,197", "level": "INFO", "message": "Running Scenario 13: Multiple Payee Types"}
{"timestamp": "2025-10-20 13:03:49,364", "level": "INFO", "message": "Scenario 13 finished.", "event_type": "rule_detection", "scenario_id": 13, "scenario_name": "Multiple Payee Types", "anomalies_found": 437}
{"timestamp": "2025-10-20 13:03:49,364", "level": "INFO", "message": "Running Scenario 14: Excessive Diagnoses"}
{"timestamp": "2025-10-20 13:03:49,598", "level": "INFO", "message": "Scenario 14 finished.", "event_type": "rule_detection", "scenario_id": 14, "scenario_name": "Excessive Diagnoses", "anomalies_found": 280}
{"timestamp": "2025-10-20 13:03:49,598", "level": "INFO", "message": "Running Scenario 15: Hospital Benefits from Non-Hospital Providers"}
{"timestamp": "2025-10-20 13:03:49,881", "level": "INFO", "message": "Scenario 15 finished.", "event_type": "rule_detection", "scenario_id": 15, "scenario_name": "Hospital Benefits from Non-Hospital Providers", "anomalies_found": 1316}
{"timestamp": "2025-10-20 13:03:49,881", "level": "INFO", "message": "Running Scenario 16: Paid Claims from Veterinary Providers"}
{"timestamp": "2025-10-20 13:03:50,038", "level": "INFO", "message": "Scenario 16 finished.", "event_type": "rule_detection", "scenario_id": 16, "scenario_name": "Paid Claims from Veterinary Providers", "anomalies_found": 2}
{"timestamp": "2025-10-20 13:03:50,038", "level": "INFO", "message": "Running Scenario 17: Multiple MRI/CT Same Day"}
{"timestamp": "2025-10-20 13:03:50,295", "level": "INFO", "message": "Scenario 17 finished.", "event_type": "rule_detection", "scenario_id": 17, "scenario_name": "Multiple MRI/CT Same Day", "anomalies_found": 10}
{"timestamp": "2025-10-20 13:03:50,298", "level": "INFO", "message": "Running Scenario 18: Placeholder Scenario"}
{"timestamp": "2025-10-20 13:03:50,414", "level": "INFO", "message": "Scenario 18 finished.", "event_type": "rule_detection", "scenario_id": 18, "scenario_name": "Placeholder Scenario", "anomalies_found": 0}
{"timestamp": "2025-10-20 13:03:50,424", "level": "INFO", "message": "Running Scenario 19: Multiple Screenings Same Year"}
{"timestamp": "2025-10-20 13:03:50,610", "level": "INFO", "message": "Scenario 19 finished.", "event_type": "rule_detection", "scenario_id": 19, "scenario_name": "Multiple Screenings Same Year", "anomalies_found": 93}
{"timestamp": "2025-10-20 13:03:50,615", "level": "INFO", "message": "Running Scenario 20: Dialysis Without Kidney Diagnosis"}
{"timestamp": "2025-10-20 13:03:50,830", "level": "INFO", "message": "Scenario 20 finished.", "event_type": "rule_detection", "scenario_id": 20, "scenario_name": "Dialysis Without Kidney Diagnosis", "anomalies_found": 116}
{"timestamp": "2025-10-20 13:03:50,836", "level": "INFO", "message": "Running Scenario 21: Unusual Dentistry Claims"}
{"timestamp": "2025-10-20 13:03:50,997", "level": "INFO", "message": "Scenario 21 finished.", "event_type": "rule_detection", "scenario_id": 21, "scenario_name": "Unusual Dentistry Claims", "anomalies_found": 1}
{"timestamp": "2025-10-20 13:03:50,997", "level": "INFO", "message": "Running Scenario 22: Invalid Migraine Claims"}
{"timestamp": "2025-10-20 13:03:51,198", "level": "INFO", "message": "Scenario 22 finished.", "event_type": "rule_detection", "scenario_id": 22, "scenario_name": "Invalid Migraine Claims", "anomalies_found": 20}
{"timestamp": "2025-10-20 13:03:51,347", "level": "INFO", "message": "Analysis complete. Claims: 1000, Anomalies: 440"}
{"timestamp": "2025-10-20 13:03:51,347", "level": "INFO", "message": "Results summary: {'scenario1': {'name': 'Benefit Outlier Detection', 'count': 762}, 'scenario2': {'name': 'Chemotherapy Gap Detection', 'count': 12}, 'scenario3': {'name': 'Cross-Country Fraud Detection', 'count': 571}, 'scenario4': {'name': 'Sunday Claims Analysis', 'count': 6103}, 'scenario5': {'name': 'Multiple Claims Same Invoice', 'count': 4}, 'scenario6': {'name': 'Inpatient/Outpatient Same Date', 'count': 256}, 'scenario7': {'name': 'Provider Multi-Country', 'count': 74}, 'scenario8': {'name': 'Multiple Provider Same Date', 'count': 316}, 'scenario9': {'name': 'Member Multi-Currency', 'count': 3810}, 'scenario10': {'name': 'Gender-Procedure Mismatch', 'count': 3432}, 'scenario11': {'name': 'Early Invoice Date', 'count': 4}, 'scenario12': {'name': 'Adult Pediatric Diagnosis', 'count': 129}, 'scenario13': {'name': 'Multiple Payee Types', 'count': 437}, 'scenario14': {'name': 'Excessive Diagnoses', 'count': 280}, 'scenario15': {'name': 'Hospital Benefits from Non-Hospital Providers', 'count': 1316}, 'scenario16': {'name': 'Paid Claims from Veterinary Providers', 'count': 2}, 'scenario17': {'name': 'Multiple MRI/CT Same Day', 'count': 10}, 'scenario18': {'name': 'Placeholder Scenario', 'count': 0}, 'scenario19': {'name': 'Multiple Screenings Same Year', 'count': 93}, 'scenario20': {'name': 'Dialysis Without Kidney Diagnosis', 'count': 116}, 'scenario21': {'name': 'Unusual Dentistry Claims', 'count': 1}, 'scenario22': {'name': 'Invalid Migraine Claims', 'count': 20}}"}
{"timestamp": "2025-10-20 13:07:17,416", "level": "INFO", "message": "ML analysis started.", "event_type": "ml_detection_start", "job_id": "687e356c-cfd1-43a1-8926-2f4509366b79", "file_path": "temp_upload.csv"}
{"timestamp": "2025-10-20T13:12:09.406639", "level": "INFO", "message": "ML analysis finished.", "event_type": "ml_detection_end", "job_id": "687e356c-cfd1-43a1-8926-2f4509366b79", "anomalies_found": 211, "model_version": "1.0"}
{"timestamp": "2025-10-20 13:52:49,998", "level": "INFO", "message": "Starting Flask API server on port 5001"}
{"timestamp": "2025-10-20 13:52:54,746", "level": "INFO", "message": "Starting Flask API server on port 5001"}
